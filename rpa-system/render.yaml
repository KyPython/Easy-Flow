# Backend API Service
# - type: web
#   name: easyflow-backend
#   runtime: node
#   plan: starter
#   buildCommand: npm install
#   startCommand: npm start
#   envVars:
#     - key: NODE_ENV
#       value: production
#     - key: PORT
#       value: 10000
#   # Add your environment variables from .env.render here

# Frontend Service (if deploying separately)
# - type: web
#   name: easyflow-frontend
#   runtime: static
#   plan: starter
#   buildCommand: npm run build
#   staticPublishPath: ./build
#   routes:
#     - type: rewrite
#       source: /*
#       destination: /index.html

services:
  - type: web
    name: easyflow-backend
    runtime: node
    env: node
    region: oregon
    plan: starter # paid tier to keep backend always-on
    buildCommand: |
      set -e
      echo "[build] entering rpa-system"
      cd rpa-system
      if [ -f package-lock.json ]; then
        echo "[build] running npm ci" && npm ci
      else
        echo "[build] running npm install" && npm install
      fi
      if [ ! -d node_modules/express ]; then
        echo "[build] FATAL: express not installed" && ls -1 node_modules | head && exit 1
      fi
      echo "[build] skipping python automation deps - using stub mode"
      echo "[build] if you need python automation, set AUTOMATION_MODE=python and install dependencies manually"
    startCommand: cd rpa-system && node backend/index.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3030
      - key: ENABLE_EMAIL_WORKER
        value: "true"
      - key: NODE_VERSION
        value: 20.16.0
      - key: AUTOMATION_MODE
        value: stub # set to 'python' to run real automate.py as subprocess
      - key: SUPABASE_URL
        value: https://syxzilyuysdoirnezgii.supabase.co
      - key: POSTGRES_URL
        fromDatabase:
          name: easyflow-postgres
          property: connectionString
      - key: SUPABASE_SERVICE_ROLE
        sync: false # Set manually in Render dashboard
      - key: SUPABASE_ANON_KEY
        sync: false # Set manually in Render dashboard
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_DATABASE_URL
        sync: false
      - key: FIREBASE_SERVICE_ACCOUNT_PATH
        value: /opt/render/project/src/rpa-system/backend/config/firebase-service-account.json
      - key: API_KEY
        generateValue: true
      - key: ALLOWED_ORIGINS
        value: https://easy-flow-lac.vercel.app,https://app.easyflow.com
      - key: KAFKA_ENABLED
        value: false
      - key: KAFKA_BROKERS
        value: localhost:9092
      - key: AUTOMATION_SERVICE_URL
        value: https://easyflow-automation.onrender.com

  # Python Automation Service (24/7 Cloud)
  - type: web
    name: easyflow-automation
    runtime: python
    env: python
    region: oregon
    plan: starter # $7/month for 24/7 operation
    buildCommand: |
      set -e
      echo "[automation] Installing Python dependencies"
      cd rpa-system/automation
      pip install --upgrade pip
      pip install -r requirements.txt
      echo "[automation] Python automation service ready"
    startCommand: cd rpa-system/automation && python production_automation_service.py
    healthCheckPath: /health
    envVars:
      - key: KAFKA_ENABLED
        value: false # HTTP-only mode for cloud deployment
      - key: PORT
        value: 7001
      - key: HOST
        value: 0.0.0.0
      - key: PYTHON_VERSION
        value: 3.11
      - key: MAX_WORKERS
        value: 3
      - key: AUTOMATION_MODE
        value: production

databases:
  - name: easyflow-postgres
    databaseName: easyflow_production
    region: oregon

  - name: easyflow-redis
    region: oregon
    plan: free
