-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.action_definitions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_type text NOT NULL UNIQUE,
  name text NOT NULL,
  description text NOT NULL,
  category text NOT NULL DEFAULT 'general'::text,
  config_schema jsonb NOT NULL,
  input_schema jsonb DEFAULT '{}'::jsonb,
  output_schema jsonb DEFAULT '{}'::jsonb,
  icon_url text,
  color text DEFAULT '#0066cc'::text,
  required_plan text DEFAULT 'free'::text,
  execution_limit integer,
  version text NOT NULL DEFAULT '1.0.0'::text,
  is_system boolean DEFAULT true,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT action_definitions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.automation_logs (
  id bigint NOT NULL DEFAULT nextval('automation_logs_id_seq'::regclass),
  task text,
  url text,
  username text,
  status text CHECK (status = ANY (ARRAY['completed'::text, 'failed'::text])),
  artifact_url text,
  result jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT automation_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.automation_runs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id uuid,
  user_id uuid,
  status text NOT NULL CHECK (status = ANY (ARRAY['running'::text, 'completed'::text, 'failed'::text])),
  started_at timestamp with time zone DEFAULT now(),
  ended_at timestamp with time zone,
  result jsonb,
  created_at timestamp with time zone DEFAULT now(),
  artifact_url text,
  file_ids ARRAY DEFAULT '{}'::uuid[],
  CONSTRAINT automation_runs_pkey PRIMARY KEY (id),
  CONSTRAINT automation_runs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT automation_runs_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.automation_tasks(id)
);
CREATE TABLE public.automation_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  name text NOT NULL,
  description text,
  url text,
  parameters jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  task_type text,
  CONSTRAINT automation_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT automation_tasks_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.email_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid,
  to_email text NOT NULL,
  template text NOT NULL,
  data jsonb,
  status text NOT NULL DEFAULT 'pending'::text,
  attempts integer NOT NULL DEFAULT 0,
  last_error text,
  scheduled_at timestamp with time zone NOT NULL DEFAULT now(),
  claimed_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT email_queue_pkey PRIMARY KEY (id),
  CONSTRAINT email_queue_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.file_share_access_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  share_id uuid NOT NULL,
  accessed_at timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  access_type character varying NOT NULL DEFAULT 'view'::character varying CHECK (access_type::text = ANY (ARRAY['view'::character varying, 'download'::character varying, 'password_attempt'::character varying]::text[])),
  success boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT file_share_access_logs_pkey PRIMARY KEY (id),
  CONSTRAINT file_share_access_logs_share_id_fkey FOREIGN KEY (share_id) REFERENCES public.file_shares(id)
);
CREATE TABLE public.file_shares (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_id uuid NOT NULL,
  shared_by uuid NOT NULL,
  shared_with uuid,
  share_token text UNIQUE,
  permissions text NOT NULL DEFAULT 'view'::text CHECK (permissions = ANY (ARRAY['view'::text, 'download'::text])),
  max_downloads integer,
  download_count integer DEFAULT 0,
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  password_hash text,
  CONSTRAINT file_shares_pkey PRIMARY KEY (id),
  CONSTRAINT file_shares_shared_with_fkey FOREIGN KEY (shared_with) REFERENCES auth.users(id),
  CONSTRAINT file_shares_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id),
  CONSTRAINT file_shares_shared_by_fkey FOREIGN KEY (shared_by) REFERENCES auth.users(id)
);
CREATE TABLE public.files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  original_name text NOT NULL,
  display_name text,
  description text,
  storage_path text NOT NULL UNIQUE,
  storage_bucket text NOT NULL DEFAULT 'artifacts'::text,
  file_size bigint NOT NULL,
  mime_type text NOT NULL,
  file_extension text,
  checksum_md5 text,
  task_id uuid,
  run_id uuid,
  visibility text NOT NULL DEFAULT 'private'::text CHECK (visibility = ANY (ARRAY['private'::text, 'shared'::text, 'public'::text])),
  is_temporary boolean DEFAULT false,
  expires_at timestamp with time zone,
  folder_path text DEFAULT '/'::text,
  tags ARRAY DEFAULT '{}'::text[],
  metadata jsonb DEFAULT '{}'::jsonb,
  thumbnail_path text,
  download_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT files_pkey PRIMARY KEY (id),
  CONSTRAINT files_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT files_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.automation_tasks(id),
  CONSTRAINT files_run_id_fkey FOREIGN KEY (run_id) REFERENCES public.automation_runs(id)
);
CREATE TABLE public.forwarded_event_ids (
  id text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT forwarded_event_ids_pkey PRIMARY KEY (id)
);
CREATE TABLE public.marketing_events (
  id bigint NOT NULL DEFAULT nextval('marketing_events_id_seq'::regclass),
  user_id text,
  event_name text NOT NULL,
  properties jsonb DEFAULT '{}'::jsonb,
  utm jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT marketing_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.orders (
  id integer NOT NULL DEFAULT nextval('orders_id_seq'::regclass),
  user_id uuid NOT NULL,
  sales numeric DEFAULT 0,
  completed boolean DEFAULT false,
  CONSTRAINT orders_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  amount_cents integer NOT NULL CHECK (amount_cents >= 0),
  currency text NOT NULL DEFAULT 'USD'::text,
  status text NOT NULL CHECK (status = ANY (ARRAY['succeeded'::text, 'failed'::text, 'pending'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  description text,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES auth.users(id)
);
CREATE TABLE public.plan_feature_labels (
  feature_key text NOT NULL,
  feature_label text NOT NULL,
  CONSTRAINT plan_feature_labels_pkey PRIMARY KEY (feature_key)
);
CREATE TABLE public.plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  price_cents integer NOT NULL CHECK (price_cents >= 0),
  billing_interval USER-DEFINED NOT NULL DEFAULT 'month'::billing_interval,
  external_product_id text UNIQUE,
  feature_flags jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  polar_url text,
  description text,
  is_most_popular boolean DEFAULT false,
  CONSTRAINT plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text UNIQUE,
  full_name text,
  avatar_url text,
  created_at timestamp with time zone DEFAULT now(),
  notification_preferences jsonb DEFAULT '{"sms_alerts": false, "system_alerts": true, "task_failures": true, "weekly_reports": true, "security_alerts": true, "task_completion": true, "marketing_emails": true, "push_notifications": true, "email_notifications": true}'::jsonb,
  ui_preferences jsonb DEFAULT '{"theme": "light", "language": "en", "timezone": "UTC", "date_format": "MM/DD/YYYY", "dashboard_layout": "grid"}'::jsonb,
  fcm_token text,
  phone_number text,
  plan_id text DEFAULT 'free'::text,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles_int (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  email text NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_int_pkey PRIMARY KEY (id)
);
CREATE TABLE public.referrals (
  id bigint NOT NULL DEFAULT nextval('referrals_id_seq'::regclass),
  code text NOT NULL UNIQUE,
  owner_user_id uuid,
  redeemed_by_user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  redeemed_at timestamp with time zone,
  reward_granted boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  status text NOT NULL DEFAULT 'pending'::text,
  referred_user_id uuid,
  referral_code text,
  CONSTRAINT referrals_pkey PRIMARY KEY (id)
);
CREATE TABLE public.step_executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_execution_id uuid NOT NULL,
  step_id uuid NOT NULL,
  execution_order integer NOT NULL,
  status text NOT NULL DEFAULT 'queued'::text CHECK (status = ANY (ARRAY['queued'::text, 'running'::text, 'completed'::text, 'failed'::text, 'skipped'::text])),
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  duration_ms integer,
  input_data jsonb DEFAULT '{}'::jsonb,
  output_data jsonb DEFAULT '{}'::jsonb,
  result jsonb DEFAULT '{}'::jsonb,
  error_message text,
  retry_count integer DEFAULT 0,
  automation_log_id bigint,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT step_executions_pkey PRIMARY KEY (id),
  CONSTRAINT step_executions_workflow_execution_id_fkey FOREIGN KEY (workflow_execution_id) REFERENCES public.workflow_executions(id),
  CONSTRAINT step_executions_step_id_fkey FOREIGN KEY (step_id) REFERENCES public.workflow_steps(id),
  CONSTRAINT step_executions_automation_log_id_fkey FOREIGN KEY (automation_log_id) REFERENCES public.automation_logs(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  plan_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['active'::text, 'canceled'::text, 'past_due'::text, 'trialing'::text])),
  external_payment_id text UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  started_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT subscriptions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id)
);
CREATE TABLE public.template_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  template_id uuid NOT NULL,
  version text NOT NULL,
  changelog text,
  config jsonb NOT NULL,
  dependencies jsonb DEFAULT '[]'::jsonb,
  screenshots ARRAY DEFAULT '{}'::text[],
  submitted_by uuid,
  reviewed_by uuid,
  review_notes text,
  approved_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'pending_review'::text, 'published'::text, 'rejected'::text, 'archived'::text])),
  CONSTRAINT template_versions_pkey PRIMARY KEY (id),
  CONSTRAINT template_versions_submitted_by_fkey FOREIGN KEY (submitted_by) REFERENCES auth.users(id),
  CONSTRAINT template_versions_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.workflow_templates(id),
  CONSTRAINT template_versions_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES auth.users(id)
);
CREATE TABLE public.user_features (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  feature_name text NOT NULL,
  enabled boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_features_pkey PRIMARY KEY (id),
  CONSTRAINT user_features_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_settings (
  id bigint NOT NULL DEFAULT nextval('user_settings_id_seq'::regclass),
  user_id uuid NOT NULL UNIQUE,
  email_notifications boolean DEFAULT true,
  weekly_reports boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  push_notifications boolean DEFAULT true,
  task_completion boolean DEFAULT true,
  task_failures boolean DEFAULT true,
  system_alerts boolean DEFAULT true,
  marketing_emails boolean DEFAULT true,
  security_alerts boolean DEFAULT true,
  deal_updates boolean DEFAULT true,
  customer_alerts boolean DEFAULT true,
  theme text DEFAULT 'light'::text CHECK (theme = ANY (ARRAY['light'::text, 'dark'::text])),
  dashboard_layout text DEFAULT 'grid'::text CHECK (dashboard_layout = ANY (ARRAY['grid'::text, 'list'::text])),
  timezone text DEFAULT 'UTC'::text,
  date_format text DEFAULT 'MM/DD/YYYY'::text,
  language text DEFAULT 'en'::text,
  fcm_token text,
  phone_number text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_settings_pkey PRIMARY KEY (id),
  CONSTRAINT user_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_workflow_data (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  workflow_id uuid NOT NULL,
  data_key text NOT NULL,
  data_value jsonb NOT NULL,
  data_type text NOT NULL DEFAULT 'json'::text,
  expires_at timestamp with time zone,
  is_encrypted boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_workflow_data_pkey PRIMARY KEY (id),
  CONSTRAINT user_workflow_data_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT user_workflow_data_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.workflow_connections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  source_step_id uuid NOT NULL,
  target_step_id uuid NOT NULL,
  connection_type text NOT NULL DEFAULT 'next'::text CHECK (connection_type = ANY (ARRAY['next'::text, 'success'::text, 'error'::text, 'condition'::text])),
  condition jsonb DEFAULT '{}'::jsonb,
  visual_config jsonb DEFAULT '{"color": "#0066cc", "style": "solid", "animated": false}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_connections_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_connections_source_step_id_fkey FOREIGN KEY (source_step_id) REFERENCES public.workflow_steps(id),
  CONSTRAINT workflow_connections_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_connections_target_step_id_fkey FOREIGN KEY (target_step_id) REFERENCES public.workflow_steps(id)
);
CREATE TABLE public.workflow_executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  user_id uuid NOT NULL,
  execution_number integer NOT NULL,
  status text NOT NULL DEFAULT 'queued'::text CHECK (status = ANY (ARRAY['queued'::text, 'running'::text, 'completed'::text, 'failed'::text, 'cancelled'::text, 'timeout'::text])),
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  duration_seconds integer,
  input_data jsonb DEFAULT '{}'::jsonb,
  output_data jsonb DEFAULT '{}'::jsonb,
  error_message text,
  error_step_id uuid,
  triggered_by text DEFAULT 'manual'::text,
  trigger_data jsonb DEFAULT '{}'::jsonb,
  steps_executed integer DEFAULT 0,
  steps_total integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_executions_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_executions_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_executions_error_step_id_fkey FOREIGN KEY (error_step_id) REFERENCES public.workflow_steps(id),
  CONSTRAINT workflow_executions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.workflow_schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  user_id uuid NOT NULL,
  name text NOT NULL,
  schedule_type text NOT NULL CHECK (schedule_type = ANY (ARRAY['cron'::text, 'interval'::text, 'webhook'::text])),
  cron_expression text,
  timezone text DEFAULT 'UTC'::text,
  interval_seconds integer,
  webhook_token text UNIQUE,
  webhook_secret text,
  is_active boolean DEFAULT true,
  last_triggered_at timestamp with time zone,
  next_trigger_at timestamp with time zone,
  max_executions integer,
  execution_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_schedules_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_schedules_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.workflow_steps (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  step_key text NOT NULL,
  name text NOT NULL,
  description text,
  step_type text NOT NULL,
  position_x real NOT NULL DEFAULT 0,
  position_y real NOT NULL DEFAULT 0,
  action_type text,
  config jsonb DEFAULT '{}'::jsonb,
  parent_step_id uuid,
  execution_order integer NOT NULL DEFAULT 0,
  conditions jsonb DEFAULT '[]'::jsonb,
  on_success text DEFAULT 'continue'::text,
  on_error text DEFAULT 'retry'::text,
  success_step_id uuid,
  error_step_id uuid,
  is_enabled boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_steps_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_steps_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_steps_parent_step_id_fkey FOREIGN KEY (parent_step_id) REFERENCES public.workflow_steps(id),
  CONSTRAINT workflow_steps_success_step_id_fkey FOREIGN KEY (success_step_id) REFERENCES public.workflow_steps(id),
  CONSTRAINT workflow_steps_error_step_id_fkey FOREIGN KEY (error_step_id) REFERENCES public.workflow_steps(id)
);
CREATE TABLE public.workflow_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_by uuid NOT NULL,
  source_workflow_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  category text NOT NULL DEFAULT 'general'::text,
  tags ARRAY,
  template_config jsonb NOT NULL,
  required_inputs jsonb DEFAULT '[]'::jsonb,
  expected_outputs jsonb DEFAULT '[]'::jsonb,
  usage_count integer DEFAULT 0,
  rating numeric DEFAULT 0.0,
  is_public boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  published_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_templates_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT workflow_templates_source_workflow_id_fkey FOREIGN KEY (source_workflow_id) REFERENCES public.workflows(id)
);
CREATE TABLE public.workflow_test_results (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  scenario_id uuid NOT NULL,
  workflow_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['passed'::text, 'failed'::text, 'running'::text, 'cancelled'::text])),
  execution_time integer NOT NULL DEFAULT 0,
  step_results jsonb NOT NULL DEFAULT '[]'::jsonb,
  actual_outputs jsonb NOT NULL DEFAULT '{}'::jsonb,
  error_message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT workflow_test_results_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_test_results_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT workflow_test_results_scenario_id_fkey FOREIGN KEY (scenario_id) REFERENCES public.workflow_test_scenarios(id)
);
CREATE TABLE public.workflow_test_scenarios (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  user_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  input_data jsonb NOT NULL DEFAULT '{}'::jsonb,
  expected_outputs jsonb NOT NULL DEFAULT '{}'::jsonb,
  test_steps jsonb NOT NULL DEFAULT '[]'::jsonb,
  mock_config jsonb NOT NULL DEFAULT '{}'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT workflow_test_scenarios_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_test_scenarios_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT workflow_test_scenarios_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id)
);
CREATE TABLE public.workflow_variables (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  variable_name text NOT NULL,
  variable_type text NOT NULL CHECK (variable_type = ANY (ARRAY['string'::text, 'number'::text, 'boolean'::text, 'json'::text, 'secret'::text])),
  description text,
  default_value jsonb,
  is_required boolean DEFAULT false,
  is_encrypted boolean DEFAULT false,
  validation_rules jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_variables_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_variables_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id)
);
CREATE TABLE public.workflows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  version integer NOT NULL DEFAULT 1,
  status text NOT NULL DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'active'::text, 'paused'::text, 'archived'::text])),
  canvas_config jsonb DEFAULT '{"edges": [], "nodes": [], "viewport": {"x": 0, "y": 0, "zoom": 1}}'::jsonb,
  settings jsonb DEFAULT '{"retry_count": 3, "retry_delay": 5, "error_handling": "stop", "max_executions": null, "timeout_minutes": 60, "parallel_execution": false}'::jsonb,
  total_executions integer DEFAULT 0,
  successful_executions integer DEFAULT 0,
  failed_executions integer DEFAULT 0,
  last_executed_at timestamp with time zone,
  tags ARRAY,
  is_template boolean DEFAULT false,
  is_public boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflows_pkey PRIMARY KEY (id),
  CONSTRAINT workflows_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);