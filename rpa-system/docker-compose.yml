services:
  backend:
    image: node:20-alpine
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
      - AUTOMATION_URL=http://automation:7001/run
      - SUPABASE_BUCKET=${SUPABASE_BUCKET:-artifacts}
      - SUPABASE_USE_SIGNED_URLS=${SUPABASE_USE_SIGNED_URLS:-true}
      - SUPABASE_SIGNED_URL_EXPIRES=${SUPABASE_SIGNED_URL_EXPIRES:-86400}
      - DOWNLOADS_DIR_CONTAINER=/downloads
      - DOWNLOADS_DIR_HOST=/workspace/downloads
      - API_KEY=${API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    command: sh -c "npm install && node backend/index.js"
    ports:
      - "3030:3001"
    depends_on:
      automation:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3001/health || curl -fsS http://localhost:3001/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  automation:
    build:
      context: .
      dockerfile: automation/Dockerfile
    working_dir: /app
    volumes:
      - ./downloads:/downloads
    environment:
      - PORT=7001
      - AUTOMATION_PORT=7001
      - DRY_RUN=0
    ports:
      - "7001:7001"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7001/health || curl -fsS http://localhost:7001/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  email_worker:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./:/app
      - root_config:/root/.config:ro
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
      - SEND_EMAIL_WEBHOOK=${SEND_EMAIL_WEBHOOK}
      - EMAIL_WORKER_POLL_MS=5000
    command: ["sh","-c","npm install && node backend/workers/email_worker.js"]
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  root_config: {}