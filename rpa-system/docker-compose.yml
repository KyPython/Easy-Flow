services:
  nginx:
    image: nginx:1.25-alpine
    container_name: rpa-system-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/www/easyflow-app:/var/www/easyflow-app:ro
    depends_on:
      backend:
        condition: service_healthy
      hooks_probe:
        condition: service_started
      automation:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - easyflow_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      # Mount only the downloads directory, not the entire codebase
      - ./downloads:/workspace/downloads
    environment:
      - PORT=3030
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
      - AUTOMATION_URL=http://automation:7001/run
      - SUPABASE_BUCKET=${SUPABASE_BUCKET:-artifacts}
      - SUPABASE_USE_SIGNED_URLS=true
      - SUPABASE_SIGNED_URL_EXPIRES=${SUPABASE_SIGNED_URL_EXPIRES:-86400}
      - DOWNLOADS_DIR_CONTAINER=/downloads
      - DOWNLOADS_DIR_HOST=/workspace/downloads
      - API_KEY=${API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - POLAR_API_KEY=${POLAR_API_KEY}
      - POLAR_WEBHOOK_SECRET=${POLAR_WEBHOOK_SECRET}
      - APP_URL=${APP_URL}
      - HUBSPOT_API_KEY=${HUBSPOT_API_KEY}
      - SEND_EMAIL_WEBHOOK_SECRET=${SEND_EMAIL_WEBHOOK_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL}
      - SENDGRID_FROM_NAME=${SENDGRID_FROM_NAME}
    ports:
      - "3030:3030"
    depends_on:
      automation:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3030/health || curl -fsS http://localhost:3030/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - easyflow_network

  automation:
    build:
      context: .
      dockerfile: automation/Dockerfile
    volumes:
      - ./downloads:/downloads
    environment:
      - PORT=7001
      - AUTOMATION_PORT=7001
      - DRY_RUN=0
    ports:
      - "7001:7001"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7001/health || curl -fsS http://localhost:7001/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - easyflow_network

  email_worker:
    build:
      context: .
      dockerfile: Dockerfile.email_worker
    volumes:
      - root_config:/root/.config:ro
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
      - SEND_EMAIL_WEBHOOK_SECRET=${SEND_EMAIL_WEBHOOK_SECRET}
      - EMAIL_WORKER_POLL_MS=5000
    restart: unless-stopped
    networks:
      - easyflow_network

  hooks_probe:
    build:
      context: .
      dockerfile: Dockerfile.hooks_probe
    environment:
      - PORT=4001
    ports:
      - "4001:4001"
    restart: unless-stopped
    networks:
      - easyflow_network

networks:
  easyflow_network:
    driver: bridge

volumes:
  root_config: {}