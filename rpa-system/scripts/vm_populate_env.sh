#!/usr/bin/env bash
set -euo pipefail
# Interactive helper to populate ~/rpa-system/.env on the VM.
# Run inside the VM at ~/rpa-system.
# Usage: ./vm_populate_env.sh

ENV_FILE="./.env"
if [ ! -f ./.env.example ]; then
  echo ".env.example not found in $(pwd)" >&2
  exit 1
fi

read -rp "SUPABASE_URL (https://<project-ref>.supabase.co): " SUPABASE_URL
read -rp "SUPABASE_ANON_KEY: " SUPABASE_ANON_KEY
read -rp "SUPABASE_SERVICE_ROLE (server-only): " SUPABASE_SERVICE_ROLE
read -rp "ALLOWED_ORIGINS (comma separated, e.g. https://app.34.171.164.208.sslip.io): " ALLOWED_ORIGINS

# Generate API_KEY if user wants
read -rp "Generate a random API_KEY for you? (y/n) ": gen
if [[ "$gen" =~ ^[Yy] ]]; then
  API_KEY=$(openssl rand -base64 32)
  echo "Generated API_KEY: $API_KEY"
else
  read -rp "Enter API_KEY (keep it secret): " API_KEY
fi

cat > "$ENV_FILE" <<EOF
# Server environment (generated by vm_populate_env.sh)
SUPABASE_URL=${SUPABASE_URL}
SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
SUPABASE_SERVICE_ROLE=${SUPABASE_SERVICE_ROLE}
ARTIFACTS_BUCKET=artifacts
USE_SIGNED_URLS=true
SIGNED_URL_EXPIRES=3600
DOWNLOADS_DIR_CONTAINER=/downloads
DOWNLOADS_DIR_HOST=./downloads
AUTOMATION_URL=http://automation:7001/run
API_KEY=${API_KEY}
ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
EOF

chmod 600 "$ENV_FILE"

echo "Wrote $ENV_FILE (permissions 600). Keep SUPABASE_SERVICE_ROLE secret."
