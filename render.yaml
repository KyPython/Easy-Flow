services:
  - type: web
    name: easyflow-backend
    runtime: node
    env: node
    region: oregon
    plan: starter
    repo: https://github.com/KyPython/Easy-Flow
    branch: main
    rootDir: rpa-system
    autoDeploy: true
    pullRequestPreviewsEnabled: true
    buildCommand: |
      set -e
      echo "[build] entering rpa-system"
      if [ -f package.json ] && [ -f package-lock.json ]; then
        npm ci
      else
        npm install
      fi
    startCommand: node backend/server.js

  - type: worker
    name: automation-worker
    runtime: python
    env: python
    region: oregon
    plan: starter
    repo: https://github.com/KyPython/Easy-Flow
    branch: main
    rootDir: rpa-system/automation/automation-service
    autoDeploy: true
    buildCommand: |
      python3 -m pip install --upgrade pip
      python3 -m pip install -r ../requirements.txt --no-cache-dir
    startCommand: python3 production_automation_service.py

  - type: web
    name: easyflow-kafka
    region: oregon
    plan: starter
    autoDeploy: false
    docker:
      image: "vectorized/redpanda:latest"
    startCommand: >-
      redpanda start --smp 1 --memory 1024M --overprovisioned --node-id 0
      --kafka-addr 0.0.0.0:9092
      --advertise-kafka-addr easyflow-kafka:9092
      --check=false
    disk:
      name: kafka-data
      mountPath: /var/lib/redpanda/data
      sizeGB: 5

  - type: redis
    name: easyflow-redis
    plan: free

databases:
  - name: easyflow-postgres
    databaseName: easyflow_production
    region: oregon
