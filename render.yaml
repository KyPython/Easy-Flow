services:
  - type: web
    name: easyflow-backend
    runtime: node
    env: node
    region: oregon
    plan: starter # paid tier to keep backend always-on
    buildCommand: |
      set -e
      echo "[build] entering rpa-system"
      cd rpa-system
      if [ -f package-lock.json ]; then
        echo "[build] running npm ci"
        npm ci || (echo "[build] npm ci failed; falling back to npm install" && npm install)
      else
        echo "[build] running npm install" && npm install
      fi
      if [ ! -d node_modules/express ]; then
        echo "[build] FATAL: express not installed" && ls -1 node_modules | head && exit 1
      fi
      echo "[build] installing python automation deps"
      cd automation
      python3 -m pip install -r requirements.txt --no-cache-dir || true
    startCommand: cd rpa-system && node backend/index.js
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3030
      - key: ENABLE_EMAIL_WORKER
        value: "true"
      - key: NODE_VERSION
        value: 20.16.0
      - key: AUTOMATION_MODE
        value: stub # set to 'python' to run real automate.py as subprocess
      - key: SUPABASE_URL
        fromDatabase:
          name: easyflow-postgres
          property: connectionString
      - key: SUPABASE_SERVICE_ROLE
        sync: false # Set manually in Render dashboard
      - key: SUPABASE_ANON_KEY
        sync: false # Set manually in Render dashboard
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_DATABASE_URL
        sync: false
      - key: FIREBASE_SERVICE_ACCOUNT_PATH
        value: /opt/render/project/src/rpa-system/backend/config/firebase-service-account.json
      - key: API_KEY
        generateValue: true
      - key: ALLOWED_ORIGINS
        value: https://easyflow-dashboard.vercel.app,https://app.easyflow.com

databases:
  - name: easyflow-postgres
    databaseName: easyflow_production
    region: oregon

  - name: easyflow-redis
    region: oregon
    plan: free
