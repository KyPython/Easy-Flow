services:
  - type: web
    name: easyflow-backend
    runtime: node
    env: node
    region: oregon
    plan: starter
    repo: https://github.com/KyPython/Easy-Flow
    branch: main
    rootDir: rpa-system
    autoDeploy: true
    pullRequestPreviewsEnabled: true
    buildCommand: |
      set -e
      echo "[build] entering rpa-system"
      if [ -f package.json ] && [ -f package-lock.json ]; then
        npm ci
      else
        npm install
      fi
      echo "[build] installing backend dependencies"
      cd backend
      if [ -f package.json ] && [ -f package-lock.json ]; then
        # Try npm ci first (faster and more reliable for production)
        npm ci || {
          echo "[build] npm ci failed, falling back to npm install..."
          rm -f package-lock.json
          npm install
        }
      else
        npm install
      fi
      cd ..
    startCommand: node backend/server.js

  - type: worker
    name: automation-worker
    runtime: python
    env: python
    region: oregon
    plan: starter
    repo: https://github.com/KyPython/Easy-Flow
    branch: main
    rootDir: rpa-system/automation/automation-service
    autoDeploy: true
    buildCommand: |
      python3 -m pip install --upgrade pip
      python3 -m pip install -r ../requirements.txt --no-cache-dir
    startCommand: python3 production_automation_service.py


  - type: redis
    name: easyflow-redis
    plan: free
    ipAllowList: []

databases:
  - name: easyflow-postgres
    databaseName: easyflow_production
    region: oregon
