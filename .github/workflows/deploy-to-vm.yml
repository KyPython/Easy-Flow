name: Deploy to VM

on:
  push:
    branches: [main]

env:
  TAR_FILE: rpa-system.tar.gz
  VM_HOST: ${{ secrets.VM_HOST }}
  VM_USER: ${{ secrets.VM_USER }}
  SSH_PORT: ${{ secrets.SSH_PORT }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Build frontend
        working-directory: rpa-system/rpa-dashboard
        run: |
          npm ci
          npm run build

      - name: Package rpa-system
        run: |
          rm -f /tmp/${{ env.TAR_FILE }} || true
          tar -czf /tmp/${{ env.TAR_FILE }} \
            --exclude='rpa-system/node_modules' \
            --exclude='rpa-system/rpa-dashboard/node_modules' \
            --exclude='rpa-system/downloads' \
            --exclude='rpa-system/.git' \
            --exclude='rpa-system/**/.env*' \
            rpa-system

      - name: Prepare SSH deploy key
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          if [ -z "$DEPLOY_SSH_KEY" ]; then echo 'Missing DEPLOY_SSH_KEY secret' && exit 1; fi
          mkdir -p ~/.ssh
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          touch ~/.ssh/known_hosts
          if [ -n "${{ env.VM_HOST }}" ]; then
            ssh-keyscan -H "${{ env.VM_HOST }}" >> ~/.ssh/known_hosts
          fi

      - name: Run deployment with debug info
        run: |
          export GIT_SSH_COMMAND="ssh -v"
          scp -i ~/.ssh/deploy_key /tmp/${{ env.TAR_FILE }} ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/tmp/${{ env.TAR_FILE }}


      - name: Add SSH known host
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Copy package to VM
        run: |
          if [ -z "${{ env.VM_HOST }}" ] || [ -z "${{ env.VM_USER }}" ]; then echo 'Missing VM_HOST or VM_USER secrets' && exit 1; fi
          PORT_OPT=''
          if [ -n "${{ env.SSH_PORT }}" ]; then PORT_OPT="-P ${{ env.SSH_PORT }}"; fi
          scp -i ~/.ssh/deploy_key $PORT_OPT -o StrictHostKeyChecking=yes /tmp/${{ env.TAR_FILE }} "${{ env.VM_USER }}@${{ env.VM_HOST }}:/tmp/${{ env.TAR_FILE }}"

      - name: Run remote deploy
        run: |
          PORT_OPT=''
          if [ -n "${{ env.SSH_PORT }}" ]; then PORT_OPT="-p ${{ env.SSH_PORT }}"; fi
          ssh -i ~/.ssh/deploy_key $PORT_OPT -o StrictHostKeyChecking=yes "${{ env.VM_USER }}@${{ env.VM_HOST }}" <<'EOF'
            set -euo pipefail
            if [ -f /tmp/rpa-system.tar.gz ]; then
              sudo rm -rf ~/rpa-system
              sudo tar -xzf /tmp/rpa-system.tar.gz -C ~
            fi
            cd ~/rpa-system
            sudo chmod +x ./deploy.sh
            sudo ./deploy.sh
            echo "deploy finished"
          EOF
